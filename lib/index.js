!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(o,s){function u(e){try{c(r.next(e))}catch(e){s(e)}}function a(e){try{c(r.throw(e))}catch(e){s(e)}}function c(e){e.done?o(e.value):new n(function(t){t(e.value)}).then(u,a)}c((r=r.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const o=n(1);t.textToWorker=function(e,t){t=t||{};let n=String().concat(t.preText||"",e,t.postText||"",";",o.default,";",t.postWorker||"");const s=new Worker(URL.createObjectURL(new Blob([n]))),u=[];return s.onmessage=(e=>{let t,n=e.data;const r=u.find((e,r)=>(t=r,e.messageId==n.messageId));if(r&&r.onReject&&r.onResolve){if(u.splice(t,1),"success"==n.resultType)return void r.onResolve(n.result);r.onReject(n.result)}}),new Proxy({},{get:(e,t,n)=>{const o={messageId:(Math.random()+Date.now()).toString(),functionName:t,onResolve:null,onReject:null,args:null};return u.push(o),(...e)=>r(this,void 0,void 0,function*(){return new Promise((t,n)=>{o.args=e,s.postMessage(o),o.onResolve=t,o.onReject=n})})}})}},function(e,t,n){"use strict";n.r(t),t.default="var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nconst ctx = self;\r\nctx.onmessage = (e) => __awaiter(this, void 0, void 0, function* () {\r\n    const messageId = e.data.messageId;\r\n    const functionName = e.data.functionName;\r\n    let args = e.data.args;\r\n    let result;\r\n    let resultType;\r\n    try {\r\n        const functionHere = eval(`${functionName}`);\r\n        result = functionHere(...args);\r\n        resultType = 'success';\r\n    }\r\n    catch (err) {\r\n        console.log(err);\r\n        result = JSON.stringify(err);\r\n        resultType = 'error';\r\n    }\r\n    finally {\r\n        const data = {\r\n            messageId: messageId,\r\n            functionName: functionName,\r\n            result: result,\r\n            resultType: resultType\r\n        };\r\n        try {\r\n            ctx.postMessage(JSON.parse(JSON.stringify(data)));\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n});\r\n"}]);